<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Vue_关于$emit的用法</title>
      <link href="/2023/04/17/Vue_%E5%85%B3%E4%BA%8E$emit%E7%9A%84%E7%94%A8%E6%B3%95/"/>
      <url>/2023/04/17/Vue_%E5%85%B3%E4%BA%8E$emit%E7%9A%84%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="vue2-x"><a href="#vue2-x" class="headerlink" title="vue2.x"></a>vue2.x</h2><p>1、父组件可以使用 props 把数据传给子组件(子给父传值)。<br>2、子组件可以使用 $emit,让父组件监听到自定义事件 。</p><p>vm.$emit( event, arg ) &#x2F;&#x2F;触发当前实例上的事件</p><p>vm.$on( event, fn );&#x2F;&#x2F;监听event事件后运行 fn；</p><p>例如：子组件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;train-city&quot;&gt;</span><br><span class="line">    &lt;h3&gt;父组件传给子组件的toCity:&#123;&#123;sendData&#125;&#125;&lt;/h3&gt; </span><br><span class="line">    &lt;br/&gt;&lt;button @click=&#x27;select(`大连`)&#x27;&gt;点击此处将‘大连’发射给父组件&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    name:&#x27;trainCity&#x27;,</span><br><span class="line">    props:[&#x27;sendData&#x27;], // 用来接收父组件传给子组件的数据</span><br><span class="line">    methods:&#123;</span><br><span class="line">      select(val) &#123;</span><br><span class="line">        let data = &#123;</span><br><span class="line">          cityname: val</span><br><span class="line">        &#125;;</span><br><span class="line">        this.$emit(&#x27;showCityName&#x27;,data);//select事件触发后，自动触发showCityName事件</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>父组件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;div&gt;父组件的toCity&#123;&#123;toCity&#125;&#125;&lt;/div&gt;</span><br><span class="line">        &lt;train-city @showCityName=&quot;updateCity&quot; :sendData=&quot;toCity&quot;&gt;&lt;/train-city&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import TrainCity from &quot;./train-city&quot;;</span><br><span class="line">  export default &#123;</span><br><span class="line">    name:&#x27;index&#x27;,</span><br><span class="line">    components: &#123;TrainCity&#125;,</span><br><span class="line">    data () &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        toCity:&quot;北京&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods:&#123;</span><br><span class="line">      updateCity(data)&#123;//触发子组件城市选择-选择城市的事件</span><br><span class="line">        this.toCity = data.cityname;//改变了父组件的值</span><br><span class="line">        console.log(&#x27;toCity:&#x27;+this.toCity)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue_关于$emit的用法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue_混入（mixin）详细介绍（可复用性、全局混入</title>
      <link href="/2023/04/12/Vue_%E6%B7%B7%E5%85%A5%EF%BC%88mixin%EF%BC%89%E8%AF%A6%E7%BB%86%E4%BB%8B%E7%BB%8D%EF%BC%88%E5%8F%AF%E5%A4%8D%E7%94%A8%E6%80%A7%E3%80%81%E5%85%A8%E5%B1%80%E6%B7%B7%E5%85%A5%EF%BC%89/"/>
      <url>/2023/04/12/Vue_%E6%B7%B7%E5%85%A5%EF%BC%88mixin%EF%BC%89%E8%AF%A6%E7%BB%86%E4%BB%8B%E7%BB%8D%EF%BC%88%E5%8F%AF%E5%A4%8D%E7%94%A8%E6%80%A7%E3%80%81%E5%85%A8%E5%B1%80%E6%B7%B7%E5%85%A5%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><p>混入（mixin）提供了一种非常灵活的方式，来分发 Vue 组件中的可复用功能。一个混入对象可以包含任意组件选项（如data、methods、mounted等等）。当组件使用混入对象时，所有混入对象的选项将被“混合”进入该组件本身的选项。 </p><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><p>1、定义两个混入做演示（mixin）</p><img src="https://pic.imgdb.cn/item/643654c60d2dde5777069173.png"><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> mixin = &#123;</span><br><span class="line">   <span class="attr">methods</span>: &#123;</span><br><span class="line">      <span class="title function_">showName</span>(<span class="params"></span>) &#123;</span><br><span class="line">         <span class="title function_">alert</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">      &#125;,</span><br><span class="line">   &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> mixin2 = &#123;</span><br><span class="line">   <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">         <span class="attr">x</span>: <span class="number">100</span>,</span><br><span class="line">         <span class="attr">y</span>: <span class="number">200</span></span><br><span class="line">      &#125;</span><br><span class="line">   &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2、在组件（Home.vue）中使用</p><img src="https://pic.imgdb.cn/item/643654c60d2dde57770691d4.png"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">   &lt;div&gt;</span><br><span class="line">      &lt;h2&gt;姓名：&#123;&#123; name &#125;&#125;&lt;/h2&gt;</span><br><span class="line">      &lt;h2&gt;性别：&#123;&#123; sex &#125;&#125;&lt;/h2&gt;</span><br><span class="line">      &lt;button @click=&quot;showName&quot;&gt;显示姓名&lt;/button&gt;</span><br><span class="line">   &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; mixin, mixin2 &#125; from &quot;./mixin&quot;; //导入混入（mixin）</span><br><span class="line">export default &#123;</span><br><span class="line">   name: &quot;Student&quot;,</span><br><span class="line">   data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">         name: &quot;张三&quot;,</span><br><span class="line">         sex: &quot;男士&quot;,</span><br><span class="line">      &#125;;</span><br><span class="line">   &#125;,</span><br><span class="line">   mixins: [mixin, mixin2],  //使用混入（mixin）</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="全局混入"><a href="#全局混入" class="headerlink" title="全局混入"></a>全局混入</h2><p>混入也可以进行全局注册。使用时格外小心！一旦使用全局混入，它将影响每一个之后创建的 Vue 实例。使用恰当时，这可以用来为自定义选项注入处理逻辑。</p><p>在main.js中通过Vue.mixin()引入混入对象即可全局使用（作用于该Vue实例下的所有组件）<br><img src="https://pic.imgdb.cn/item/643655420d2dde577707517f.png"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> mixin <span class="keyword">from</span> <span class="string">&#x27;./mixins&#x27;</span>;</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">mixin</span>(mixin)</span><br></pre></td></tr></table></figure><p>此时我们将Home.vue、About.vue中使用混入对象的代码注释</p><img src="https://pic.imgdb.cn/item/643655420d2dde5777075156.png"><blockquote><p>请谨慎使用全局混入，因为它会影响每个单独创建的 Vue 实例 (包括第三方组件)。大多数情况下，只应当应用于自定义选项，就像上面示例一样。推荐将其作为插件发布，以避免重复应用混入。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue_混入（mixin）详细介绍（可复用性、全局混入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue_props配置项</title>
      <link href="/2023/04/12/Vue_props%E9%85%8D%E7%BD%AE%E9%A1%B9/"/>
      <url>/2023/04/12/Vue_props%E9%85%8D%E7%BD%AE%E9%A1%B9/</url>
      
        <content type="html"><![CDATA[<ol><li><p>功能：让组件接收外部传过来的数据</p></li><li><p>传递数据：<code>&lt;Demo name=&quot;xxx&quot;/&gt;</code></p></li><li><p>接收数据：</p><ol><li><p>第一种方式（只接收）：<code>props:[&#39;name&#39;] </code></p></li><li><p>第二种方式（限制类型）：<code>props:&#123;name:String&#125;</code></p></li><li><p>第三种方式（限制类型、限制必要性、指定默认值）：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">props</span>:&#123;</span><br><span class="line"><span class="attr">name</span>:&#123;</span><br><span class="line"><span class="attr">type</span>:<span class="title class_">String</span>, <span class="comment">//类型</span></span><br><span class="line"><span class="attr">required</span>:<span class="literal">true</span>, <span class="comment">//必要性</span></span><br><span class="line"><span class="attr">default</span>:<span class="string">&#x27;老王&#x27;</span> <span class="comment">//默认值</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>备注：props是只读的，Vue底层会监测你对props的修改，如果进行了修改，就会发出警告，若业务需求确实需要修改，那么请复制props的内容到data中一份，然后去修改data中的数据。</p></blockquote></li></ol><p>代码演示<br>1.组件页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h1&gt;&#123;&#123; msg &#125;&#125;&lt;/h1&gt;</span><br><span class="line">    &lt;h2&gt;姓名：&#123;&#123; name &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;性别：&#123;&#123; sex &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;年龄：&#123;&#123; myAge &#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;button @click=&quot;update&quot;&gt;尝试修改年龄&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    name: &quot;Student&quot;,</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        msg: &quot;我是一个尚硅谷的学生&quot;,</span><br><span class="line">        myAge: this.age,</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    //简单接收方式（比较常用）</span><br><span class="line">    props: [&quot;name&quot;, &quot;sex&quot;, &quot;age&quot;],</span><br><span class="line">    methods: &#123;</span><br><span class="line">      update() &#123;</span><br><span class="line">        this.myAge++;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    //限制参数类型的方式</span><br><span class="line">    // props: &#123;</span><br><span class="line">    //   name: String,</span><br><span class="line">    //   age: Number,</span><br><span class="line">    //   sex: String,</span><br><span class="line">    // &#125;,</span><br><span class="line"></span><br><span class="line">    //限制参数类型+默认值的指定+必要性的限制的方式</span><br><span class="line">    // props: &#123;</span><br><span class="line">    //   name: &#123;</span><br><span class="line">    //     type: String, //传值的类型限制</span><br><span class="line">    //     required: true, //必须要的，必须要传值</span><br><span class="line">    //   &#125;,</span><br><span class="line">    //   sex: &#123;</span><br><span class="line">    //     type: String,</span><br><span class="line">    //     required: true, //一般情况下required:true和default不会同时出现</span><br><span class="line">    //   &#125;,</span><br><span class="line">    //   age: &#123;</span><br><span class="line">    //     type: Number,</span><br><span class="line">    //     default: 99, //默认的，如果不传值默认的值</span><br><span class="line">    //   &#125;,</span><br><span class="line">    // &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>2.使用页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;Student name=&quot;李四&quot; sex=&quot;女&quot; :age=&quot;18&quot; /&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import Student from &quot;./components/Student.vue&quot;;</span><br><span class="line">  export default &#123;</span><br><span class="line">    name: &quot;App&quot;,</span><br><span class="line">    components: &#123;</span><br><span class="line">      Student,</span><br><span class="line">    &#125;,</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;&#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue_props配置项 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue_ref属性的使用</title>
      <link href="/2023/04/12/Vue_ref%E5%B1%9E%E6%80%A7%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/04/12/Vue_ref%E5%B1%9E%E6%80%A7%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<ol><li>被用来给元素或子组件注册引用信息（id的替代者）</li><li>应用在html标签上获取的是真实DOM元素，应用在组件标签上是组件实例对象（vc）</li><li>使用方式：<ol><li>打标识：<code>&lt;h1 ref=&quot;xxx&quot;&gt;.....&lt;/h1&gt;</code> 或 <code>&lt;School ref=&quot;xxx&quot;&gt;&lt;/School&gt;</code></li><li>获取：<code>this.$refs.xxx</code></li></ol></li></ol><p>示例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;!-- 在DOM元素上打上ref的标识 --&gt;</span><br><span class="line">    &lt;h1 v-text=&quot;msg&quot; ref=&quot;title&quot;&gt;&lt;/h1&gt;</span><br><span class="line">    &lt;button  @click=&quot;showDom&quot;&gt;点我输出上方的DOM元素&lt;/button&gt;</span><br><span class="line">     &lt;!-- 同样也可以给组件打上ref标识 --&gt;</span><br><span class="line">    &lt;School ref=&quot;sch&quot;/&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import School from &quot;./components/School.vue&quot;;</span><br><span class="line">  export default &#123;</span><br><span class="line">    name: &quot;App&quot;,</span><br><span class="line">    components: &#123;</span><br><span class="line">      School,</span><br><span class="line">    &#125;,</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        msg: &quot;欢迎来到尚硅谷&quot;,</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      showDom() &#123;</span><br><span class="line">        // 获取ref表示的DOM元素，如果是应用在组件上则获取组件的实例对象</span><br><span class="line">        console.log(this.$refs.title);</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue_ref属性的使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue_分析Vue脚手架</title>
      <link href="/2023/04/12/Vue_%E5%88%86%E6%9E%90Vue%E8%84%9A%E6%89%8B%E6%9E%B6/"/>
      <url>/2023/04/12/Vue_%E5%88%86%E6%9E%90Vue%E8%84%9A%E6%89%8B%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="脚手架文件结构"><a href="#脚手架文件结构" class="headerlink" title="脚手架文件结构"></a>脚手架文件结构</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">├── node_modules </span><br><span class="line">├── public</span><br><span class="line">│   ├── favicon.ico: 页签图标</span><br><span class="line">│   └── index.html: 主页面</span><br><span class="line">├── src</span><br><span class="line">│   ├── assets: 存放静态资源</span><br><span class="line">│   │   └── logo.png</span><br><span class="line">│   │── component: 存放组件</span><br><span class="line">│   │   └── HelloWorld.vue</span><br><span class="line">│   │── App.vue: 汇总所有组件</span><br><span class="line">│   │── main.js: 入口文件</span><br><span class="line">├── .gitignore: git版本管制忽略的配置</span><br><span class="line">├── babel.config.js: babel的配置文件</span><br><span class="line">├── package.json: 应用包配置文件 </span><br><span class="line">├── README.md: 应用描述文件</span><br><span class="line">├── package-lock.json：包版本控制文件</span><br></pre></td></tr></table></figure><h2 id="关于不同版本的Vue"><a href="#关于不同版本的Vue" class="headerlink" title="## 关于不同版本的Vue"></a>## 关于不同版本的Vue</h2><ol><li>vue.js与vue.runtime.xxx.js的区别：<ol><li>vue.js是完整版的Vue，包含：核心功能 + 模板解析器。</li><li>vue.runtime.xxx.js是运行版的Vue，只包含：核心功能；没有模板解析器。</li></ol></li><li>因为vue.runtime.xxx.js没有模板解析器，所以不能使用template这个配置项，需要使用render函数接收到的createElement函数去指定具体内容。</li></ol><h2 id="vue-config-js配置文件"><a href="#vue-config-js配置文件" class="headerlink" title="## vue.config.js配置文件"></a>## vue.config.js配置文件</h2><ol><li>使用vue inspect &gt; output.js可以查看到Vue脚手架的默认配置。</li><li>使用vue.config.js可以对脚手架进行个性化定制，详情见：<a href="https://cli.vuejs.org/zh">https://cli.vuejs.org/zh</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue_分析Vue脚手架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue_解决Vetur插件格式化缩进问题</title>
      <link href="/2023/04/12/Vue_%E8%A7%A3%E5%86%B3Vetur%E6%8F%92%E4%BB%B6%E6%A0%BC%E5%BC%8F%E5%8C%96%E7%BC%A9%E8%BF%9B%E9%97%AE%E9%A2%98/"/>
      <url>/2023/04/12/Vue_%E8%A7%A3%E5%86%B3Vetur%E6%8F%92%E4%BB%B6%E6%A0%BC%E5%BC%8F%E5%8C%96%E7%BC%A9%E8%BF%9B%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="VS-Code-插件-vetur-控制缩进"><a href="#VS-Code-插件-vetur-控制缩进" class="headerlink" title="VS Code 插件 vetur 控制缩进"></a>VS Code 插件 vetur 控制缩进</h2><p>刚安装vetur 插件时，默认的<code>&lt;script&gt;</code>和<code>&lt;style&gt;</code>标签开头的代码是不缩进的<br>比如这个样子：<br><img src="https://s1.ax1x.com/2023/04/12/ppORX40.png"></p><p>看起来不怎么美观，可以打开设置，进入 setting.json 这样配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;editor.formatOnSave&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;vetur.format.scriptInitialIndent&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="comment">// js部分是否有初始缩进</span></span><br><span class="line"><span class="attr">&quot;vetur.format.styleInitialIndent&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span> <span class="comment">// style部分是否有初始缩进</span></span><br><span class="line"><span class="attr">&quot;vetur.format.options.tabSize&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span> <span class="comment">//默认缩进字符数</span></span><br><span class="line"><span class="attr">&quot;vetur.format.options.useTabs&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>保存后，打开要格式化的文件，ctrl + s,就会发现vue文件会自动格式化，变成：<br><img src="https://s1.ax1x.com/2023/04/12/ppORONq.png"></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue_解决Vetur插件格式化缩进问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue_生命周期</title>
      <link href="/2023/04/10/Vue_%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
      <url>/2023/04/10/Vue_%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是生命周期？"><a href="#什么是生命周期？" class="headerlink" title="什么是生命周期？"></a>什么是生命周期？</h1><p>生命周期，以个人之浅见，<strong>即一个事物从诞生到消亡的一个过程</strong>！</p><p>以人的一生来做类比，其实就可以简单粗暴的将生命周期看作人的一生，人这一出生就开始了一段美好（艰难）的旅程，一生中每个成长的阶段都会对应的去做每个阶段该做的事，比如，上幼儿园，小学，中学，高中，大学，工作（比如我就在辛苦的码字），结婚等等直到百年以后，尘归尘，土归土，这就是人的生命周期！</p><p>vue也有这样的一个生命周期，也会在执行到每个阶段做一些事情，不同的是vue在每个对应的阶段是通过生命周期函数去做的，此刻再去看一下vue官网对生命周期的描述就好理解多了！</p><ul><li>vue官网的描述：<blockquote><p>每个 Vue 实例在被创建时都要经过一系列的初始化过程——例如，需要设置数据监听、编译模板、将实例挂载到 DOM 并在数据变化时更新 DOM 等。同时在这个过程中也会运行一些叫做生命周期钩子的函数，这给了用户在不同阶段添加自己的代码的机会。</p></blockquote></li></ul><p><strong>简单来说就是</strong>： 在 Vue 从创建实例到最终完全消亡的过程中，会执行一系列的方法，用于对应当前 Vue 的状态，这些方法我们叫它：生命周期钩子！</p><p>来看我给大家找的一张图，可以保存起来，等待后学学习使用的深入，再看这张图:</p><img src="https://s1.ax1x.com/2023/04/10/ppquZsP.jpg"><blockquote><p>根据上图可知，vue的生命周期一共有8个钩子函数，这8个函数描绘了一个vue的一生，下来我们详细来看看这8个生命周期函数，以便更好的理解Vue的生命周期！</p></blockquote><h1 id="vue的8个生命周期函数"><a href="#vue的8个生命周期函数" class="headerlink" title="vue的8个生命周期函数"></a>vue的8个生命周期函数</h1><ol><li><p><code>beforeCreate</code>：在实例初始化之后，数据观测 (Data Observer) 和 event&#x2F;watcher 事件配置之前被调用。</p></li><li><p><code>created</code>：在实例创建完成后被立即调用。在这一步，实例已完成以下的配置：数据观测 (data observer)、属性和方法的运算，watch&#x2F;event 事件回调；然而，挂载阶段还没开始，$el 属性目前不可见。</p></li><li><p><code>beforeMount</code>：在挂载开始之前被调用，相关的 render 函数首次被调用。</p></li><li><p><code>mounted</code>：el 被新创建的 vm.$el 替换，并挂载到实例上去之后调用该钩子。</p></li></ol><blockquote><p>如果 <code>root</code> 实例挂载了一个文档内元素，当 mounted 被调用时 <code>vm.$el</code> 也在文档内（PS：注意 <code>mounted</code> 不会承诺所有的子组件也都一起被挂载。<br>如果你希望等到整个视图都渲染完毕，可以用 <code>vm.$nextTick</code> 替换掉 <code>mounted：</code>,<br><code>vm.$nextTick</code>会在后面的篇幅详细讲解，这里大家需要知道有这个东西。</p></blockquote><ol start="5"><li><code>beforeUpdate</code>：数据更新时调用，发生在虚拟 DOM 打补丁之前。这里适合在更新之前访问现有的 DOM，比如手动移除已添加的事件监听器。</li><li><code>updated</code>：由于数据更改导致的虚拟 DOM 重新渲染和打补丁，在这之后会调用该钩子。当这个钩子被调用时，组件 DOM 已经更新，所以现在可以执行依赖于 DOM 的操作，然而在大多数情况下，你应该避免在此期间更改状态。如果要相应状态改变，通常最好使用计算属性或 watcher 取而代之（PS：计算属性与 watcher 会在后面的篇幅中进行介绍）。</li><li><code>beforeDestroy</code>：实例销毁之前调用，在这一步，实例仍然完全可用。</li><li><code>destroyed：Vue</code>: 实例销毁后调用。调用后，Vue 实例指示的所有东西都会解绑定，所有的事件监听器会被移除，所有的子实例也会被销毁。</li></ol><h1 id="3个关于vue组件的生命周期钩子"><a href="#3个关于vue组件的生命周期钩子" class="headerlink" title="3个关于vue组件的生命周期钩子"></a>3个关于vue组件的生命周期钩子</h1><p>1.activated：keep-alive 组件激活时调用（PS：与组件相关，关于 keep-alive 会在讲解组件时介绍）。<br>2.deactivated：keep-alive 组件停用时调用（PS：与组件相关，关于 keep-alive 会在讲解组件时介绍）。<br>3.errorCaptured ：当捕获一个来自子孙组件的错误时被调用，此钩子会收到三个参数：错误对象、发生错误的组件实例以及一个包含错误来源信息的字符串，此钩子可以返回 false 以阻止该错误继续向上传播。</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue_生命周期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue_自定义指令</title>
      <link href="/2023/04/10/Vue_%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4/"/>
      <url>/2023/04/10/Vue_%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol><li>指令定义时不加v-,但使用时要加v-。</li><li>指令名如果是多个单词要使用kebab-case。命名方式不要用kebabCase命名</li></ol><h2 id="局部自定义指令演示"><a href="#局部自定义指令演示" class="headerlink" title="局部自定义指令演示"></a>局部自定义指令演示</h2><blockquote><p>需求1:定义一个v-big指令,和v-text功能类似,但会把绑定的数值放大10倍</p></blockquote><blockquote><p>需求2:定义一个v-fbind指令，和v-bind功能类似,但是可以让其所绑定的input元素默认获取焦点。</p></blockquote><h3 id="局部指令定义语法"><a href="#局部指令定义语法" class="headerlink" title="局部指令定义语法"></a>局部指令定义语法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">        <span class="attr">directives</span>: &#123;</span><br><span class="line">            指令名()&#123;匹配对象&#125;,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)     </span><br><span class="line">        或者</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">        <span class="attr">directives</span>: &#123;</span><br><span class="line">            指令名:&#123;回调函数&#125;</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>代码演示:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;script type=&quot;text/javascript&quot; src=&quot;../js/vue .js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;h2&gt;当前的n是：&lt;span v-text=&quot;n&quot;&gt;&lt;/span&gt;&lt;/h2&gt;</span><br><span class="line">        &lt;h2&gt;放大的n是:&lt;span v-big=&quot;n&quot;&gt;&lt;/span&gt;&lt;/h2&gt;</span><br><span class="line">        &lt;button @click=&quot;n++&quot;&gt;N+1&lt;/button&gt;</span><br><span class="line">        &lt;hr&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; v-fbind:value=&quot;n&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    new Vue(&#123;</span><br><span class="line">        el: &#x27;#root&#x27;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            n: 1</span><br><span class="line">        &#125;,</span><br><span class="line">        directives: &#123;</span><br><span class="line">            big(element, binding) &#123;</span><br><span class="line">                element.innerText = binding.value * 10</span><br><span class="line">            &#125;,</span><br><span class="line">            // 局部自定义指令</span><br><span class="line">            fbind: &#123;</span><br><span class="line">                // 指令与元素成功绑定时</span><br><span class="line">                bind(element, binding) &#123;</span><br><span class="line">                    element.value = binding.value</span><br><span class="line">                &#125;,</span><br><span class="line">                // 指令在元素被插入时</span><br><span class="line">                inserted(element, binding) &#123;</span><br><span class="line">                    element.focus()</span><br><span class="line">                &#125;,</span><br><span class="line">                // 指令在元素被重新解析时</span><br><span class="line">                update(element, binding) &#123;</span><br><span class="line">                    element.value = binding.value</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="全局自定义指令演示"><a href="#全局自定义指令演示" class="headerlink" title="全局自定义指令演示"></a>全局自定义指令演示</h2><blockquote><p>需求1:定义一个v-big指令,和v-text功能类似,但会把绑定的数值放大10倍</p></blockquote><blockquote><p>需求2:定义一个v-fbind指令，和v-bind功能类似,但是可以让其所绑定的input元素默认获取焦点。</p></blockquote><h3 id="全局指令定义语法"><a href="#全局指令定义语法" class="headerlink" title="全局指令定义语法"></a>全局指令定义语法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">directive</span>(<span class="string">&#x27;指令名&#x27;</span>, 配置对象）</span><br><span class="line">或者</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">directive</span>(<span class="string">&#x27;指令名&#x27;</span>, 回调函数）</span><br></pre></td></tr></table></figure><p>代码演示:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">  &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">  &lt;script type=&quot;text/javascript&quot; src=&quot;../js/vue .js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=&quot;root&quot;&gt;</span><br><span class="line">  &lt;h2&gt;当前的n是：&lt;span v-text=&quot;n&quot;&gt;&lt;/span&gt;&lt;/h2&gt;</span><br><span class="line">  &lt;h2&gt;放大的n是:&lt;span v-big=&quot;n&quot;&gt;&lt;/span&gt;&lt;/h2&gt;</span><br><span class="line">  &lt;button @click=&quot;n++&quot;&gt;N+1&lt;/button&gt;</span><br><span class="line">  &lt;hr&gt;</span><br><span class="line">  &lt;input type=&quot;text&quot; v-fbind:value=&quot;n&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">  // 全局自定义指令</span><br><span class="line">  Vue.directive(&#x27;fbind&#x27;, &#123;</span><br><span class="line">    bind(element, binding) &#123;</span><br><span class="line">      element.value = binding.value</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    inserted(element, binding) &#123;</span><br><span class="line">      element.focus()</span><br><span class="line">    &#125;,</span><br><span class="line">    update(element, binding) &#123;</span><br><span class="line">      element.value = binding.value</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  Vue.directive(&#x27;big&#x27;, function (element, binding) &#123;</span><br><span class="line">    element.innerText = binding.value * 10</span><br><span class="line">  &#125;)</span><br><span class="line">  new Vue(&#123;</span><br><span class="line">    el: &#x27;#root&#x27;,</span><br><span class="line">    data: &#123;</span><br><span class="line">      n: 1</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue_自定义指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue_Sort排序的使用</title>
      <link href="/2023/04/06/Vue_Sort%E6%8E%92%E5%BA%8F%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/04/06/Vue_Sort%E6%8E%92%E5%BA%8F%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="sort排序的使用"><a href="#sort排序的使用" class="headerlink" title="sort排序的使用"></a>sort排序的使用</h1><blockquote><p>这个很简单看看就会了 直接上案例</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;script type=&quot;text/javascript&quot; src=&quot;../js/vue .js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;h2&gt;人员列表&lt;/h2&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; placeholder=&quot;请输入名字&quot; name=&quot;inputname&quot; v-model=&quot;keyword&quot;&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot;(p, index) in filpersons&quot; :key=&quot;p.id&quot;&gt;</span><br><span class="line">                &#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;-&#123;&#123;p.sex&#125;&#125;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">        &lt;button @click=&quot;sortType=2&quot;&gt;年龄升序&lt;/button&gt;</span><br><span class="line">        &lt;button @click=&quot;sortType=1&quot;&gt;年龄降序&lt;/button&gt;</span><br><span class="line">        &lt;button @click=&quot;sortType=0&quot;&gt;原顺序&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    new Vue(&#123;</span><br><span class="line"></span><br><span class="line">        el: &#x27;#root&#x27;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            sortType: 0, //0为默认 1为降序 2为升序</span><br><span class="line">            keyword: &#x27;&#x27;,</span><br><span class="line">            persons: [</span><br><span class="line">                &#123; id: &#x27;001&#x27;, name: &#x27;马冬梅&#x27;, age: 21, sex: &#x27;女&#x27; &#125;,</span><br><span class="line">                &#123; id: &#x27;002&#x27;, name: &#x27;周冬雨&#x27;, age: 20, sex: &#x27;女&#x27; &#125;,</span><br><span class="line">                &#123; id: &#x27;003&#x27;, name: &#x27;周杰伦&#x27;, age: 19, sex: &#x27;男&#x27; &#125;,</span><br><span class="line">                &#123; id: &#x27;004&#x27;, name: &#x27;温兆伦&#x27;, age: 22, sex: &#x27;男&#x27; &#125;</span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line">        computed: &#123;</span><br><span class="line">            filpersons() &#123;</span><br><span class="line">                const arr = this.persons.filter(p =&gt; &#123;</span><br><span class="line">                    return p.name.indexOf(this.keyword) != -1</span><br><span class="line">                &#125;)</span><br><span class="line">                if (this.sortType) &#123;</span><br><span class="line">                    arr.sort((p1, p2) =&gt; &#123;</span><br><span class="line">                        return this.sortType === 1 ? p2.age - p1.age : p1.age - p2.age</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">                return arr</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue_Sort排序的使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue_实现搜索关键词</title>
      <link href="/2023/04/06/Vue_%E5%AE%9E%E7%8E%B0%E6%90%9C%E7%B4%A2%E5%85%B3%E9%94%AE%E8%AF%8D/"/>
      <url>/2023/04/06/Vue_%E5%AE%9E%E7%8E%B0%E6%90%9C%E7%B4%A2%E5%85%B3%E9%94%AE%E8%AF%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="通过过滤实现搜索关键词"><a href="#通过过滤实现搜索关键词" class="headerlink" title="通过过滤实现搜索关键词"></a>通过过滤实现搜索关键词</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;script type=&quot;text/javascript&quot; src=&quot;../js/vue .js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;h2&gt;人员列表&lt;/h2&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; placeholder=&quot;请输入名字&quot; name=&quot;inputname&quot; v-model=&quot;keyword&quot;&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot;(p, index) in filpersons&quot; :key=&quot;p.id&quot;&gt;</span><br><span class="line">                &#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;-&#123;&#123;p.sex&#125;&#125;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    new Vue(&#123;</span><br><span class="line">        el: &#x27;#root&#x27;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            keyword: &#x27;&#x27;,</span><br><span class="line">            persons: [</span><br><span class="line">                &#123; id: &#x27;001&#x27;, name: &#x27;马冬梅&#x27;, age: 19, sex: &#x27;女&#x27; &#125;,</span><br><span class="line">                &#123; id: &#x27;002&#x27;, name: &#x27;周冬雨&#x27;, age: 20, sex: &#x27;女&#x27; &#125;,</span><br><span class="line">                &#123; id: &#x27;003&#x27;, name: &#x27;周杰伦&#x27;, age: 21, sex: &#x27;男&#x27; &#125;,</span><br><span class="line">                &#123; id: &#x27;004&#x27;, name: &#x27;温兆伦&#x27;, age: 22, sex: &#x27;男&#x27; &#125;</span><br><span class="line">            ],</span><br><span class="line">            filpersons: []</span><br><span class="line">        &#125;,</span><br><span class="line">        created() &#123;</span><br><span class="line">            this.filpersons = this.persons</span><br><span class="line">        &#125;,</span><br><span class="line">        watch: &#123;</span><br><span class="line">            keyword: &#123;</span><br><span class="line">                immediate: true,</span><br><span class="line">                handler(val) &#123;</span><br><span class="line">                    this.filpersons = this.persons.filter(p =&gt; &#123;</span><br><span class="line">                        return p.name.indexOf(val) != -1</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><em>handler</em>：为监听变动的属性<br><em>filter</em>：过滤数组的值,返回值为布尔类型<br>*indexOf(val)*：是否包含某个字母,-1位不含，&gt;&#x3D;0 为包含的下标</p><h1 id="还可以计算属性过滤（优先使用）"><a href="#还可以计算属性过滤（优先使用）" class="headerlink" title="还可以计算属性过滤（优先使用）"></a>还可以计算属性过滤（优先使用）</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;script type=&quot;text/javascript&quot; src=&quot;../js/vue .js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;h2&gt;人员列表&lt;/h2&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; placeholder=&quot;请输入名字&quot; name=&quot;inputname&quot; v-model=&quot;keyword&quot;&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot;(p, index) in filpersons&quot; :key=&quot;p.id&quot;&gt;</span><br><span class="line">                &#123;&#123;p.name&#125;&#125;-&#123;&#123;p.age&#125;&#125;-&#123;&#123;p.sex&#125;&#125;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    new Vue(&#123;</span><br><span class="line">        el: &#x27;#root&#x27;,</span><br><span class="line">        data: &#123;</span><br><span class="line">            keyword: &#x27;&#x27;,</span><br><span class="line">            persons: [</span><br><span class="line">                &#123; id: &#x27;001&#x27;, name: &#x27;马冬梅&#x27;, age: 19, sex: &#x27;女&#x27; &#125;,</span><br><span class="line">                &#123; id: &#x27;002&#x27;, name: &#x27;周冬雨&#x27;, age: 20, sex: &#x27;女&#x27; &#125;,</span><br><span class="line">                &#123; id: &#x27;003&#x27;, name: &#x27;周杰伦&#x27;, age: 21, sex: &#x27;男&#x27; &#125;,</span><br><span class="line">                &#123; id: &#x27;004&#x27;, name: &#x27;温兆伦&#x27;, age: 22, sex: &#x27;男&#x27; &#125;</span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line">        computed: &#123;</span><br><span class="line">            filpersons() &#123;</span><br><span class="line">                return this.persons.filter(p =&gt; &#123;</span><br><span class="line">                    return p.name.indexOf(this.keyword) != -1</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VVue_实现搜索关键词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue_按键修饰符的使用</title>
      <link href="/2023/04/06/Vue_%E6%8C%89%E9%94%AE%E4%BF%AE%E9%A5%B0%E7%AC%A6/"/>
      <url>/2023/04/06/Vue_%E6%8C%89%E9%94%AE%E4%BF%AE%E9%A5%B0%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="按键修饰符"><a href="#按键修饰符" class="headerlink" title="按键修饰符"></a>按键修饰符</h1><h2 id="按键修饰符-1"><a href="#按键修饰符-1" class="headerlink" title="按键修饰符"></a>按键修饰符</h2><table><thead><tr><th>按键修饰符</th><th>对应键位</th></tr></thead><tbody><tr><td>enter</td><td>回车键</td></tr><tr><td>tab</td><td>tab键</td></tr><tr><td>delete</td><td>删除键 或 退格键</td></tr><tr><td>esc</td><td>esc键</td></tr><tr><td>space</td><td>空格键</td></tr><tr><td>up</td><td>上箭头</td></tr><tr><td>down</td><td>下箭头</td></tr><tr><td>left</td><td>左箭头</td></tr><tr><td>right</td><td>右箭头</td></tr></tbody></table><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><p><code>@keyup.按键修饰符=&quot;事件处理函数&quot;</code> -当按键抬起时触发；</p><p><code>@keydown.按键修饰符=&quot;事件处理函数&quot;</code> -当按键按下时触发；</p><p>例如：</p><p><code>@keyup=&quot;keyup&quot;</code> -任何键抬起触发 keyup 函数；</p><p><code>@keyup.enter=&quot;enter&quot;</code> -回车键抬起时触发 enter 函数；</p><p><code>@keydown.enter=&quot;enter&quot;</code> -回车键按下时触发 enter 函数；</p><p><code>@keyup.enter.space=&quot;ok&quot;</code> -回车键或空格键抬起时触发 ok 函数；</p><p>其他按键修饰符用法同上。</p><h2 id="按键码"><a href="#按键码" class="headerlink" title="按键码"></a>按键码</h2><p><img src="https://s1.ax1x.com/2023/04/06/ppTSy2n.png" alt="按键码"><br>注：以上图片，均来自于百度。</p><blockquote><p>比如，监听 Enter 键：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; @keyup.13=&quot;submitInput&quot;&gt;  // Enter 键对应 13</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"> </span><br><span class="line">var app = new Vue(&#123;</span><br><span class="line">  el: &#x27;#app&#x27;,</span><br><span class="line">  data: &#123;&#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    submitInput() &#123;</span><br><span class="line">      console.log(&#x27;你按下了 enter 键&#x27;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上面代码中，点击 input 输入框，按下 Enter 键时，控制台会打印出 “你按下了 enter 键”。</p><p>但是，要将每个按键对应的键码值都背下来，显然是不划算的。去一个个查的话，也有点浪费时间，尤其是那些常用的按键。</p><p>而在 Vue 中，引入了 “按键修饰符” 。简单来说，它将一些常用的按键起了个名字，让我们无需再记忆那些枯燥的键码值。</p><blockquote><p>接下来，改写一下上面的代码：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; @keyup.enter=&quot;submitInput&quot;&gt;  // .13 改成了 .enter</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"> </span><br><span class="line">var app = new Vue(&#123;</span><br><span class="line">  el: &#x27;#app&#x27;,</span><br><span class="line">  data: &#123;&#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    submitInput() &#123;</span><br><span class="line">      console.log(&#x27;你按下了 enter 键&#x27;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上面代码，与之前代码效果一致，只有在按下 Enter 键时，才会触发事件。</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue_按键修饰符的使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue_事件修饰符的使用</title>
      <link href="/2023/04/06/Vue_%E4%BA%8B%E4%BB%B6%E4%BF%AE%E9%A5%B0%E7%AC%A6/"/>
      <url>/2023/04/06/Vue_%E4%BA%8B%E4%BB%B6%E4%BF%AE%E9%A5%B0%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="事件修饰符"><a href="#事件修饰符" class="headerlink" title="事件修饰符"></a>事件修饰符</h1><blockquote><p>Vue中的事件修饰符：</p></blockquote><ol><li>prevent：阻止默认事件（常用）；(比如:提交表单按钮点击默认触发跳转到指定页面,用这个属性可以阻止页面跳转保留原页面数据)</li><li>stop：阻止事件冒泡（常用）；</li><li>once：事件只触发一次（常用）；</li><li>capture：使用事件的捕获模式；</li><li>self：只有event.target是当前操作的元素时才触发事件；</li></ol><blockquote><p>示例代码:</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;UTF-8&quot; /&gt;</span><br><span class="line">&lt;title&gt;事件修饰符&lt;/title&gt;</span><br><span class="line">&lt;!-- 引入Vue --&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;../js/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">* &#123;</span><br><span class="line">margin-top: 20px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.demo1 &#123;</span><br><span class="line">height: 50px;</span><br><span class="line">background-color: skyblue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.box1 &#123;</span><br><span class="line">padding: 5px;</span><br><span class="line">background-color: skyblue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.box2 &#123;</span><br><span class="line">padding: 5px;</span><br><span class="line">background-color: orange;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.list &#123;</span><br><span class="line">width: 200px;</span><br><span class="line">height: 200px;</span><br><span class="line">background-color: peru;</span><br><span class="line">overflow: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">li &#123;</span><br><span class="line">height: 100px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!-- </span><br><span class="line">Vue中的事件修饰符：</span><br><span class="line">1.prevent：阻止默认事件（常用）；</span><br><span class="line">2.stop：阻止事件冒泡（常用）；</span><br><span class="line">3.once：事件只触发一次（常用）；</span><br><span class="line">4.capture：使用事件的捕获模式；</span><br><span class="line">5.self：只有event.target是当前操作的元素时才触发事件；</span><br><span class="line">--&gt;</span><br><span class="line">&lt;!-- 准备好一个容器--&gt;</span><br><span class="line">&lt;div id=&quot;root&quot;&gt;</span><br><span class="line">&lt;h2&gt;欢迎来到&#123;&#123;name&#125;&#125;学习&lt;/h2&gt;</span><br><span class="line">&lt;!-- 阻止默认事件（常用） --&gt;</span><br><span class="line">&lt;a href=&quot;http://www.atguigu.com&quot; @click.prevent=&quot;showInfo&quot;&gt;点我提示信息&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 阻止事件冒泡（常用） --&gt;</span><br><span class="line">&lt;div class=&quot;demo1&quot; @click=&quot;showInfo&quot;&gt;</span><br><span class="line">&lt;button @click.stop=&quot;showInfo&quot;&gt;点我提示信息&lt;/button&gt;</span><br><span class="line">&lt;!-- 修饰符可以连续写 先写的先起作用: 这样写就是先阻止默认行为后阻止冒泡--&gt;</span><br><span class="line">&lt;!-- &lt;a href=&quot;http://www.atguigu.com&quot; @click.prevent.stop=&quot;showInfo&quot;&gt;点我提示信息&lt;/a&gt; --&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 事件只触发一次（常用） --&gt;</span><br><span class="line">&lt;button @click.once=&quot;showInfo&quot;&gt;点我提示信息&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 使用事件的捕获模式 --&gt;</span><br><span class="line">&lt;div class=&quot;box1&quot; @click.capture=&quot;showMsg(1)&quot;&gt;</span><br><span class="line">div1</span><br><span class="line">&lt;div class=&quot;box2&quot; @click=&quot;showMsg(2)&quot;&gt;</span><br><span class="line">div2</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 只有event.target是当前操作的元素时才触发事件； --&gt;</span><br><span class="line">&lt;div class=&quot;demo1&quot; @click.self=&quot;showInfo&quot;&gt;</span><br><span class="line">&lt;button @click=&quot;showInfo&quot;&gt;点我提示信息&lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">Vue.config.productionTip = false //阻止 vue 在启动时生成生产提示。</span><br><span class="line"></span><br><span class="line">new Vue(&#123;</span><br><span class="line">el: &#x27;#root&#x27;,</span><br><span class="line">data: &#123;</span><br><span class="line">name: &#x27;尚硅谷&#x27;</span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line">showInfo(e) &#123;</span><br><span class="line">alert(&#x27;同学你好！&#x27;)</span><br><span class="line">// console.log(e.target)</span><br><span class="line">&#125;,</span><br><span class="line">showMsg(msg) &#123;</span><br><span class="line">console.log(msg)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="prevent：阻止默认事件（常用）"><a href="#prevent：阻止默认事件（常用）" class="headerlink" title="prevent：阻止默认事件（常用）"></a>prevent：阻止默认事件（常用）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 阻止默认事件（常用） --&gt;</span><br><span class="line">&lt;a href=&quot;http://www.atguigu.com&quot; @click.prevent=&quot;showInfo&quot;&gt;点我提示信息&lt;/a&gt;</span><br></pre></td></tr></table></figure><h2 id="stop：阻止事件冒泡（常用）"><a href="#stop：阻止事件冒泡（常用）" class="headerlink" title="stop：阻止事件冒泡（常用）"></a>stop：阻止事件冒泡（常用）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 阻止事件冒泡（常用） --&gt;</span><br><span class="line">&lt;div class=&quot;demo1&quot; @click=&quot;showInfo&quot;&gt;</span><br><span class="line">    &lt;button @click.stop=&quot;showInfo&quot;&gt;点我提示信息&lt;/button&gt;</span><br><span class="line">    &lt;!-- 修饰符可以连续写 --&gt;</span><br><span class="line">    &lt;!-- &lt;a href=&quot;http://www.atguigu.com&quot; @click.prevent.stop=&quot;showInfo&quot;&gt;点我提示信息&lt;/a&gt; --&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="once：事件只触发一次（常用）"><a href="#once：事件只触发一次（常用）" class="headerlink" title="once：事件只触发一次（常用）"></a>once：事件只触发一次（常用）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 事件只触发一次（常用） --&gt;</span><br><span class="line">&lt;button @click.once=&quot;showInfo&quot;&gt;点我提示信息&lt;/button&gt;</span><br></pre></td></tr></table></figure><h2 id="capture：使用事件的捕获模式"><a href="#capture：使用事件的捕获模式" class="headerlink" title="capture：使用事件的捕获模式"></a>capture：使用事件的捕获模式</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 使用事件的捕获模式 --&gt;</span><br><span class="line">&lt;div class=&quot;box1&quot; @click.capture=&quot;showMsg(1)&quot;&gt;</span><br><span class="line">    div1</span><br><span class="line">    &lt;div class=&quot;box2&quot; @click=&quot;showMsg(2)&quot;&gt;</span><br><span class="line">        div2</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="self：只有event-target是当前操作的元素时才触发事件"><a href="#self：只有event-target是当前操作的元素时才触发事件" class="headerlink" title="self：只有event.target是当前操作的元素时才触发事件"></a>self：只有event.target是当前操作的元素时才触发事件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 只有event.target是当前操作的元素时才触发事件； --&gt;</span><br><span class="line">&lt;div class=&quot;demo1&quot; @click.self=&quot;showInfo&quot;&gt;</span><br><span class="line">    &lt;button @click=&quot;showInfo&quot;&gt;点我提示信息&lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue_事件修饰符的使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Linux系统下载与安装Nginx</title>
      <link href="/2023/04/05/%E5%9C%A8Linux%E7%B3%BB%E7%BB%9F%E4%B8%8B%E8%BD%BD%E4%B8%8E%E5%AE%89%E8%A3%85Nginx/"/>
      <url>/2023/04/05/%E5%9C%A8Linux%E7%B3%BB%E7%BB%9F%E4%B8%8B%E8%BD%BD%E4%B8%8E%E5%AE%89%E8%A3%85Nginx/</url>
      
        <content type="html"><![CDATA[<h2 id="在Linux系统下载与安装Nginx"><a href="#在Linux系统下载与安装Nginx" class="headerlink" title="在Linux系统下载与安装Nginx"></a>在Linux系统下载与安装Nginx</h2><p>安装过程：</p><p>1、安装依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install gcc pcre-devel zlib-devel openssl opensll-devel</span><br></pre></td></tr></table></figure><p>2、下载Nginx安装包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install wget</span><br><span class="line">wget https://nginx.org/download/nginx-1.16.1.tar.gz</span><br></pre></td></tr></table></figure><p>3、解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf nginx-1.16.1.tar.gz</span><br></pre></td></tr></table></figure><p>4、进入nginx解压目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd nginx-1.16.1</span><br></pre></td></tr></table></figure><p>5、创建nginx目录并检查配置环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/local/nginx</span><br><span class="line">./configure --prefix=/usr/local/nginx</span><br></pre></td></tr></table></figure><p>6、安装Nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h2 id="Nginx目录结构"><a href="#Nginx目录结构" class="headerlink" title="Nginx目录结构"></a>Nginx目录结构</h2><p>重点目录&#x2F;文件:</p><ul><li>conf&#x2F;nginx.conf nginx配置文件</li><li>html 存放静态文件(html、css、Js等)</li><li>logs 日志目录，存放日志文件</li><li>sbin&#x2F;nginx 二进制文件，用于启动、停止Nginx服务</li></ul><p>若要显示如下的树形结构，需要安装tree命令：<code>yum install tree</code></p><img src="https://s1.ax1x.com/2023/04/05/pp574sA.png"><h2 id="Nginx命令"><a href="#Nginx命令" class="headerlink" title="Nginx命令"></a>Nginx命令</h2><p>1、查看版本号：在&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin目录下输入下面的命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nginx -v</span><br></pre></td></tr></table></figure><p>2、检查配置文件正确性<br>在启动Nginx服务之前，可以先检查一下conf&#x2F;nginx.conf文件配置的是否有错误，在&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin目录下输入下面的命令:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nginx -t</span><br></pre></td></tr></table></figure><p>3、启动和停止Nginx<br>配置nginx环境，方便在任何目录下都可以使用nginx命令,编辑<code>vim /etc/profile</code>添加如下的内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=/usr/local/nginx/sbin:$PATH</span><br></pre></td></tr></table></figure><p>最后让配置文件生效，使用命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p>生效后，nginx启动和停止命令为:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动</span></span><br><span class="line">nginx</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">停止</span></span><br><span class="line">nginx -s stop</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重新加载</span></span><br><span class="line">nginx -s reload</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看Nginx进程</span></span><br><span class="line">ps -ef | grep nginx</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4、查看Nginx进程:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep nginx</span><br></pre></td></tr></table></figure><h2 id="测试Nginx"><a href="#测试Nginx" class="headerlink" title="测试Nginx"></a>测试Nginx</h2><p>访问nginx的默认页面</p><p>开放linux80端口号:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=80/tcp --permanent</span><br></pre></td></tr></table></figure><p><strong>重新后才能生效:</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><img src="https://s1.ax1x.com/2023/04/05/pp5HGyd.png"><p>看到这个页面即Nginx启动成功</p><h2 id="Nginx配置文件结构"><a href="#Nginx配置文件结构" class="headerlink" title="Nginx配置文件结构"></a>Nginx配置文件结构</h2><p>Nginx配置文件(conf&#x2F;nginx.conf)整体分为三部分:</p><ul><li>全局块 和nginx运行相关的全局配置</li><li>Events块 和网络连接相关的配置</li><li>Http块 代理、缓存、日志记录、虚拟主机配置<ul><li>http 全局块</li><li>server 块<ul><li>server 全局块</li><li>location 块<blockquote><p>注意: http块中可以配置多个Server块，每个Server块中可以配置多个location块。</p></blockquote></li></ul></li></ul></li></ul><img src="https://s1.ax1x.com/2023/04/05/pp5OQHA.png"><h2 id="Nginx具体应用"><a href="#Nginx具体应用" class="headerlink" title="Nginx具体应用"></a>Nginx具体应用</h2><h3 id="部署静态资源"><a href="#部署静态资源" class="headerlink" title="部署静态资源"></a>部署静态资源</h3><p>Nginx可以作为静态web服务器来部署静态资源。静态资源指在服务端真实存在并且能够直接展示的一些文件，比如常见的html页面、css文件、js文件、图片、视频等资源。</p><p>相对于Tomcat，Nginx处理静态资源的能力更加高效，所以在生产环境下，一般都会将静态资源部署到Nginx中。将静态资源部署到Nginx非常简单，<code>只需要将文件复制到Nginx安装目录下的html目录中即可</code>。</p><p>配置示例(默认已经配置不需要再配置):</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">    listen 80;  #监听端口</span><br><span class="line">    server_name localhost; #服务器名称，若项目，上线则是服务器的域名</span><br><span class="line">        </span><br><span class="line">    location /&#123;   #匹配客户端请求的url</span><br><span class="line">        root   html;  #指定静态资源根目录</span><br><span class="line">        index  index.html index.htm;   #指定默认首页，若有多个默认首页，则用空格分隔，以分号结束</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h3><blockquote><p>说明：反向代理服务器位于用户与目标服务器之间，但是对于用户而言，反向代理服务器就相当于目标服务器，即用户直接访问反向代理服务器就可以获得目标服务器的资源，反向代理服务器负责将请求转发给目标服务器。<br>用户不需要知道目标服务器的地址，也无须在用户端作任何设定。</p></blockquote><img src="https://s1.ax1x.com/2023/04/05/pp5XlMF.png"><p>配置反向代理:</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server&#123;</span></span><br><span class="line">    <span class="attr">listen</span> <span class="string">82;  #监听端口</span></span><br><span class="line">    <span class="attr">server_name</span> <span class="string">localhost; #服务器名称，若项目，上线则是服务器的域名</span></span><br><span class="line">        </span><br><span class="line">    <span class="attr">location</span> <span class="string">/ &#123;   #匹配客户端请求的url</span></span><br><span class="line">        <span class="attr">root</span>   <span class="string">html;  #指定静态资源根目录</span></span><br><span class="line">        <span class="attr">index</span>  <span class="string">index.html index.htm;   #指定默认首页，若有多个默认首页，则用空格分隔，以分号结束</span></span><br><span class="line">        <span class="attr">proxy_pass</span> <span class="string">http://192.168.0.115:8080; #反向代理配置，将请求转发到指定服务器</span></span><br><span class="line">    <span class="attr">&#125;</span></span><br><span class="line"><span class="attr">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="负载均衡配置"><a href="#负载均衡配置" class="headerlink" title="负载均衡配置"></a>负载均衡配置</h3><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">upstream</span> <span class="string">targetserver&#123;  #upstream指令可以定义一组服务器</span></span><br><span class="line">    <span class="attr">server</span> <span class="string">192.168.101:8080;</span></span><br><span class="line">    <span class="attr">server</span> <span class="string">192.168.102:8081;</span></span><br><span class="line"><span class="attr">&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">server&#123;</span></span><br><span class="line">    <span class="attr">listen</span> <span class="string">8080;  #监听端口</span></span><br><span class="line">    <span class="attr">server_name</span> <span class="string">localhost; #服务器名称，若项目，上线则是服务器的域名</span></span><br><span class="line">        </span><br><span class="line">    <span class="attr">location</span> <span class="string">/ &#123;   #匹配客户端请求的url</span></span><br><span class="line">        <span class="attr">proxy_pass</span> <span class="string">http://targetserver; #反向代理配置，将请求转发到指定服务器</span></span><br><span class="line">    <span class="attr">&#125;</span></span><br><span class="line"><span class="attr">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="负载均衡策略"><a href="#负载均衡策略" class="headerlink" title="负载均衡策略"></a>负载均衡策略</h4><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>轮询</td><td>默认方式</td></tr><tr><td>weight</td><td>权重方式(默认为1)，权重越大分发的给它的机会就越高</td></tr><tr><td>ip_hash</td><td>依据ip分配方式</td></tr><tr><td>least_conn</td><td>依据最少连接方式</td></tr><tr><td>url_hash</td><td>依据url分配方式</td></tr><tr><td>fair</td><td>依据响应时间方式</td></tr></tbody></table><p>例如：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">upstream</span> <span class="string">targetserver&#123;  #upstream指令可以定义一组服务器</span></span><br><span class="line">    <span class="attr">server</span> <span class="string">192.168.101:8080 weight=10; #权重越大分发的给它的机会就越高</span></span><br><span class="line">    <span class="attr">server</span> <span class="string">192.168.102:8081 weight=5; #权重越小分发的给它的机会就越低</span></span><br><span class="line"><span class="attr">&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">server&#123;</span></span><br><span class="line">    <span class="attr">listen</span> <span class="string">8080;  #监听端口</span></span><br><span class="line">    <span class="attr">server_name</span> <span class="string">localhost; #服务器名称，若项目，上线则是服务器的域名</span></span><br><span class="line">        </span><br><span class="line">    <span class="attr">location</span> <span class="string">/ &#123;   #匹配客户端请求的url</span></span><br><span class="line">        <span class="attr">proxy_pass</span> <span class="string">http://targetserver; #反向代理配置，将请求转发到指定服务器</span></span><br><span class="line">    <span class="attr">&#125;</span></span><br><span class="line"><span class="attr">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 在Linux系统下载与安装Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My New Post</title>
      <link href="/2023/03/30/My-New-Post/"/>
      <url>/2023/03/30/My-New-Post/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL主从复制</title>
      <link href="/2023/03/30/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/"/>
      <url>/2023/03/30/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL主从复制"><a href="#MySQL主从复制" class="headerlink" title="MySQL主从复制"></a>MySQL主从复制</h1><h2 id="什么是主从复制？"><a href="#什么是主从复制？" class="headerlink" title="什么是主从复制？"></a>什么是主从复制？</h2><p>MySQL 主从复制是一种数据复制技术，它允许将一个 MySQL 数据库的更改复制到其他 MySQL 实例中。在主从复制中，有一个主服务器（master）和一个或多个从服务器（slave）。主服务器上的更改会被自动地复制到从服务器上。</p><p>主从复制有很多用途，比如：</p><ul><li>负载均衡：将读操作分配给从服务器，从而减轻主服务器的负担。</li><li>备份：可以将从服务器作为备份服务器，以便在主服务器故障时恢复数据。</li><li>分布式数据处理：将数据复制到多个从服务器上进行分布式计算。</li></ul><h2 id="如何设置主从复制？"><a href="#如何设置主从复制？" class="headerlink" title="如何设置主从复制？"></a>如何设置主从复制？</h2><p>要设置 MySQL 主从复制，需要完成以下步骤：</p><h3 id="步骤1：创建主服务器"><a href="#步骤1：创建主服务器" class="headerlink" title="步骤1：创建主服务器"></a>步骤1：创建主服务器</h3><p>在<font color="#EA4335" size=4px;>主服务器</font>上创建一个 MySQL 数据库，并确保该数据库可以被远程连接。</p><p>docker语法参照:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run  -p 3306:3306 </span><br><span class="line">-v /mydata/mysql-master/log:/var/log/mysql </span><br><span class="line">-v /mydata/mysql-master/data:/var/lib/mysql </span><br><span class="line">-v /mydata/mysql-master/conf:/etc/mysql </span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7</span><br></pre></td></tr></table></figure><h3 id="步骤2：启用二进制日志记录"><a href="#步骤2：启用二进制日志记录" class="headerlink" title="步骤2：启用二进制日志记录"></a>步骤2：启用二进制日志记录</h3><p>在<font color="EA4335" size=4px;>主服务器</font>上启用二进制日志记录。这将使主服务器将所有更改记录到二进制日志文件中。</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在 my.cnf 文件中添加以下配置</span></span><br><span class="line"><span class="attr">log-bin</span>=<span class="string">mysql-bin</span></span><br></pre></td></tr></table></figure><p>如果你无法找到 my.cnf 文件，可以尝试在终端或命令提示符中执行以下命令，查看 MySQL 的配置文件位置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql --help | grep &quot;my.cnf&quot;</span><br></pre></td></tr></table></figure><p>这个命令会返回 MySQL 配置文件的位置信息。如果你仍然无法找到 my.cnf 文件，可以尝试手动创建一个。在 Linux 上，可以使用以下命令创建 my.cnf 文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/mysql/my.cnf</span><br></pre></td></tr></table></figure><p>主服务器my.cnf配置参照:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 设置server_id，同一局域网中需要唯一，不可以和从的重复</span></span></span><br><span class="line"></span><br><span class="line">server_id=101 </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 指定不需要同步的数据库名称</span></span></span><br><span class="line"></span><br><span class="line">binlog-ignore-db=mysql  </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 开启二进制日志功能</span></span></span><br><span class="line"></span><br><span class="line">log-bin=mall-mysql-bin  </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 设置二进制日志使用内存大小（事务）</span></span></span><br><span class="line"></span><br><span class="line">binlog_cache_size=1M  </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 设置使用的二进制日志格式（mixed,statement,row）</span></span></span><br><span class="line"></span><br><span class="line">binlog_format=mixed  </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 二进制日志过期清理时间。默认值为0，表示不自动清理。</span></span></span><br><span class="line"></span><br><span class="line">expire_logs_days=7  </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 跳过主从复制中遇到的所有错误或指定类型的错误，避免slave端复制中断。</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 如：1062错误是指一些主键重复，1032错误是因为主从数据库数据不一致</span></span></span><br><span class="line"></span><br><span class="line">slave_skip_errors=1062</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>创建好后重启mysql服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysql restart </span><br></pre></td></tr></table></figure><h3 id="步骤3-数据库创建用户"><a href="#步骤3-数据库创建用户" class="headerlink" title="步骤3: 数据库创建用户"></a>步骤3: 数据库创建用户</h3><p>进入<font color="#EA4335" size=4px;>主服务器</font>的mysql，执行mysql语句创建一个从服务器的用户:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GRANT REPLICATION SLAVE ON *.* to &#x27;slave&#x27;@&#x27;%&#x27; identified by &#x27;Root@123456&#x27;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里 <code>&#39;slave&#39;</code>是用户名 <code>&#39;Root@123456&#39;</code>是主服务器mysql的root密码</p><h3 id="步骤4：创建从服务器"><a href="#步骤4：创建从服务器" class="headerlink" title="步骤4：创建从服务器"></a>步骤4：创建从服务器</h3><p>在<font color="#EA4335" size=4px;>从服务器</font>上创建一个 MySQL 数据库，并确保该数据库可以被远程连接。</p><h3 id="步骤5：配置从服务器"><a href="#步骤5：配置从服务器" class="headerlink" title="步骤5：配置从服务器"></a>步骤5：配置从服务器</h3><p>在<font color="#EA4335" size=4px;>从服务器</font>上配置以下选项：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在 my.cnf 文件中添加以下配置</span></span><br><span class="line"><span class="attr">[mysqld]</span></span><br><span class="line"><span class="attr">server-id</span>=<span class="string">2</span></span><br><span class="line"><span class="attr">relay-log</span>=<span class="string">mysql-relay-bin</span></span><br></pre></td></tr></table></figure><p>其中，<code>server-id</code> 是从服务器的 ID，应该与主服务器的 ID 不同。<code>relay-log</code> 是从服务器上的中继日志文件名。</p><p>这里如果没有这个文件我们需要自己在对应的目录下创建该文件，一般目录存在&#x2F;etc&#x2F;mysql&#x2F;my.cnf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 设置server_id，同一局域网中需要唯一,不可以和主的重复</span></span></span><br><span class="line">server_id=102</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 指定不需要同步的数据库名称</span></span></span><br><span class="line"></span><br><span class="line">binlog-ignore-db=mysql  </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 开启二进制日志功能，以备Slave作为其它数据库实例的Master时使用</span></span></span><br><span class="line"></span><br><span class="line">log-bin=mall-mysql-slave1-bin  </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 设置二进制日志使用内存大小（事务）</span></span></span><br><span class="line"></span><br><span class="line">binlog_cache_size=1M  </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 设置使用的二进制日志格式（mixed,statement,row）</span></span></span><br><span class="line"></span><br><span class="line">binlog_format=mixed  </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 二进制日志过期清理时间。默认值为0，表示不自动清理。</span></span></span><br><span class="line"></span><br><span class="line">expire_logs_days=7  </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 跳过主从复制中遇到的所有错误或指定类型的错误，避免slave端复制中断。</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 如：1062错误是指一些主键重复，1032错误是因为主从数据库数据不一致</span></span></span><br><span class="line"></span><br><span class="line">slave_skip_errors=1062  </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># relay_log配置中继日志</span></span></span><br><span class="line"></span><br><span class="line">relay_log=mall-mysql-relay-bin  </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># log_slave_updates表示slave将复制事件写进自己的二进制日志</span></span></span><br><span class="line"></span><br><span class="line">log_slave_updates=1  </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># slave设置为只读（具有super权限的用户除外）</span></span></span><br><span class="line"></span><br><span class="line">read_only=1</span><br></pre></td></tr></table></figure><h3 id="步骤6：连接主服务器和从服务器"><a href="#步骤6：连接主服务器和从服务器" class="headerlink" title="步骤6：连接主服务器和从服务器"></a>步骤6：连接主服务器和从服务器</h3><p>1.<strong>可以通过执行以下命令来获取主服务器上正在使用的二进制日志文件名和位置</strong></p><p>在主服务器的mysql中执行:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> MASTER STATUS;</span><br></pre></td></tr></table></figure><p>查看状态:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">+-----------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| File                  | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class="line">+-----------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| mall-mysql-bin.000006 |      438 |              | mysql            |                   |</span><br><span class="line">+-----------------------+----------+--------------+------------------+-------------------+</span><br></pre></td></tr></table></figure><p>记住<code>File</code>和<code>Position</code></p><div class="note warning simple"><p>注意：这里执行完查询命令主服务器就不要再做任何操作，不然Position会有可能改变</p></div><p>2.在<font color="#EA4335" size=4px;>从服务器</font>上执行以下命令：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CHANGE MASTER <span class="keyword">TO</span></span><br><span class="line">    MASTER_HOST<span class="operator">=</span><span class="string">&#x27;主服务器IP地址&#x27;</span>,</span><br><span class="line">    MASTER_USER<span class="operator">=</span><span class="string">&#x27;主服务器创建的那个用户名&#x27;</span>,</span><br><span class="line">    MASTER_PASSWORD<span class="operator">=</span><span class="string">&#x27;主服务器mysql密码&#x27;</span>,</span><br><span class="line">    MASTER_LOG_FILE<span class="operator">=</span><span class="string">&#x27;主服务器上的二进制日志文件名&#x27;</span>,</span><br><span class="line">    MASTER_LOG_POS<span class="operator">=</span><span class="string">&#x27;主服务器上的二进制日志文件的位置&#x27;</span>;</span><br><span class="line">    MASTER_CONNECT_RETRY<span class="operator">=</span><span class="string">&#x27;失联后重连秒数&#x27;</span>;</span><br></pre></td></tr></table></figure><p>例如:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CHANGE MASTER <span class="keyword">TO</span></span><br><span class="line">    MASTER_HOST<span class="operator">=</span><span class="string">&#x27;192.168.0.124&#x27;</span>,</span><br><span class="line">    MASTER_USER<span class="operator">=</span><span class="string">&#x27;slave&#x27;</span>,</span><br><span class="line">    MASTER_PASSWORD<span class="operator">=</span><span class="string">&#x27;Root@123456&#x27;</span>,</span><br><span class="line">    MASTER_LOG_FILE<span class="operator">=</span><span class="string">&#x27;mall-mysql-bin.000006&#x27;</span>,</span><br><span class="line">    MASTER_LOG_POS<span class="operator">=</span><span class="number">438</span>,</span><br><span class="line">    MASTER_CONNECT_RETRY<span class="operator">=</span><span class="number">60</span>;</span><br></pre></td></tr></table></figure><p>其中，<code>MASTER_HOST</code> 是主服务器的 IP 地址，<code>MASTER_USER</code> 和 <code>MASTER_PASSWORD</code> 是连接主服务器的用户名和密码，<code>MASTER_LOG_FILE</code> 和 <code>MASTER_LOG_POS</code> 是主服务器上的二进制日志文件名和位置。其中，<code>MASTER_CONNECT_RETRY</code> 参数的值可以根据实际需要进行调整。这里将其设置为 60 秒，表示在连接失败后每隔 60 秒尝试重新连接一次。</p><h3 id="步骤7：启动从服务器"><a href="#步骤7：启动从服务器" class="headerlink" title="步骤7：启动从服务器"></a>步骤7：启动从服务器</h3><p>在<font color="#EA4335" size=4px;>从服务器</font>上执行以下命令：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">START</span> SLAVE;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">SHOW</span> SLAVE STATUS\G;</span><br></pre></td></tr></table></figure><p>在输出中查看 <code>Slave_IO_Running</code> 和 <code>Slave_SQL_Running</code> 字段的值，确保它们都为 Yes。</p><h2 id="步骤7：测试主从复制"><a href="#步骤7：测试主从复制" class="headerlink" title="步骤7：测试主从复制"></a>步骤7：测试主从复制</h2><p>在主服务器上进行一些更改，然后在从服务器上检查这些更改是否已复制。可以使用以下命令检查从服务器的状态，比如在主服务器创建一个数据库和表,增加一条数据，看下从服务器上查看有没有这条数据。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>MySQL 主从复制是一种常用的数据复制技术，它可以将一个 MySQL 数据库的更改自动复制到其他 MySQL 实例中。主从复制有很多用途，比如负载均衡、备份和分布式数据处理等。</p><p>要设置 MySQL 主从复制，需要在主服务器上创建一个 MySQL 数据库，并启用二进制日志记录；在从服务器上创建一个 MySQL 数据库，并配置从服务器选项；连接主服务器和从服务器，然后启动从服务器。可以使用 SHOW SLAVE STATUS 命令检查从服务器的状态。</p><p>在使用 MySQL 主从复制时，需要注意以下几点：</p><ul><li>主服务器和从服务器的 MySQL 版本应该相同。</li><li>主服务器和从服务器的数据存储引擎应该相同。</li><li>不要在从服务器上进行写操作，否则可能会导致数据不一致。</li><li>需要定期备份从服务器上的数据，以防止数据丢失。</li></ul><p>希望这个 MySQL 主从复制笔记对你有所帮助。</p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL主从复制 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql读写分离配置</title>
      <link href="/2023/03/30/Mysql%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB%E9%85%8D%E7%BD%AE/"/>
      <url>/2023/03/30/Mysql%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>Mysql读写分离是针对主从复制后，减轻对主库读数据的压力，让主库负责写，从库负责读</p><h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><h2 id="导入Maven坐标"><a href="#导入Maven坐标" class="headerlink" title="导入Maven坐标"></a>导入Maven坐标</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--mysql读写分离--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shardingsphere<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sharding-jdbc-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.0-RC1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配合druid数据库连接池使用--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="配置文件中对sharding进行配置"><a href="#配置文件中对sharding进行配置" class="headerlink" title="配置文件中对sharding进行配置"></a>配置文件中对sharding进行配置</h2><p><strong>注意:这里如果配置主从数据源的时候爆红也没关系,mysql8以后都会报红,不影响正常使用</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">main:</span></span><br><span class="line">    <span class="attr">allow-bean-definition-overriding:</span> <span class="literal">true</span> <span class="comment">#允许bean定义覆盖</span></span><br><span class="line"><span class="comment"># 这里注意一定要把原来配置的datasource注释掉，两个不能一起使用</span></span><br><span class="line"><span class="comment">#  datasource:</span></span><br><span class="line"><span class="comment">#    username: root</span></span><br><span class="line"><span class="comment">#    password: 123456</span></span><br><span class="line"><span class="comment">#    url: jdbc:mysql://192.168.0.124:3306/rw?serverTimezone=Asia/Shanghai&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=false&amp;allowPublicKeyRetrieval=true</span></span><br><span class="line"><span class="comment">#    driver-class-name: com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="comment">#    type: com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">  <span class="attr">shardingsphere:</span></span><br><span class="line">    <span class="attr">datasource:</span></span><br><span class="line">      <span class="comment"># 配置数据源</span></span><br><span class="line">      <span class="attr">names:</span></span><br><span class="line">        <span class="string">master,slave</span></span><br><span class="line">      <span class="comment"># 主数据源</span></span><br><span class="line">      <span class="attr">master:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">        <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">jdbc:mysql://192.168.0.124:3306/rw?serverTimezone=Asia/Shanghai&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=false&amp;allowPublicKeyRetrieval=true</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">        <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">      <span class="attr">slave:</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">        <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">jdbc:mysql://192.168.0.188:3306/rw?serverTimezone=Asia/Shanghai&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;zeroDateTimeBehavior=convertToNull&amp;useSSL=false&amp;allowPublicKeyRetrieval=true</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">        <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="attr">masterslave:</span></span><br><span class="line">      <span class="comment">#读写分类配置 round_robin 查询轮询机制</span></span><br><span class="line">      <span class="attr">load-balance-algorithm-type:</span> <span class="string">round_robin</span></span><br><span class="line">      <span class="comment"># 数据源的名称</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">dataSource</span></span><br><span class="line">      <span class="comment">#指定主库数据源</span></span><br><span class="line">      <span class="attr">master-data-source-name:</span> <span class="string">master</span></span><br><span class="line">      <span class="comment">#指定从库数据源(多个从库用逗号隔开)</span></span><br><span class="line">      <span class="attr">slave-data-source-names:</span> <span class="string">slave</span></span><br><span class="line">    <span class="attr">props:</span></span><br><span class="line">      <span class="attr">sql:</span></span><br><span class="line">        <span class="attr">show:</span> <span class="literal">true</span> <span class="comment">#开启SQL显示,默认false(控制台输出sql语句)</span></span><br></pre></td></tr></table></figure><div class="note warning simple"><p>注意：一定要配置spring.main.allow-bean-definition-overriding&#x3D;true不然会报错</p></div>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql读写分离 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA服务器端配置跨域请求配置类</title>
      <link href="/2023/03/29/JAVA%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E9%85%8D%E7%BD%AE%E8%B7%A8%E5%9F%9F%E8%AF%B7%E6%B1%82%E9%85%8D%E7%BD%AE%E7%B1%BB/"/>
      <url>/2023/03/29/JAVA%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E9%85%8D%E7%BD%AE%E8%B7%A8%E5%9F%9F%E8%AF%B7%E6%B1%82%E9%85%8D%E7%BD%AE%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h2 id="方法一：添加cors全局配置-推荐"><a href="#方法一：添加cors全局配置-推荐" class="headerlink" title="方法一：添加cors全局配置(推荐)"></a>方法一：添加cors全局配置(推荐)</h2><p><strong>com&#x2F;wwk&#x2F;seckill&#x2F;config&#x2F;CorsConfig.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.CorsConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.UrlBasedCorsConfigurationSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.filter.CorsFilter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 全局跨域配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CorsConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> CorsFilter <span class="title function_">corsFilter</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//创建跨域配置，增加CORS配置信息。</span></span><br><span class="line">        <span class="type">CorsConfiguration</span> <span class="variable">corsConfiguration</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CorsConfiguration</span>();</span><br><span class="line">        <span class="comment">//跨域请求默认不包含cookie，设置为true，可以包含cookie。</span></span><br><span class="line">        corsConfiguration.setAllowCredentials(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//支持哪些来源的请求跨越,支持,不要写*否则cookie接收不到</span></span><br><span class="line">        corsConfiguration.addAllowedOrigin(<span class="string">&quot;http://localhost:8080&quot;</span>);</span><br><span class="line">        <span class="comment">//支持哪些头信息</span></span><br><span class="line">        corsConfiguration.addAllowedHeader(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        <span class="comment">//支持哪些方法跨越</span></span><br><span class="line">        corsConfiguration.addAllowedMethod(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        <span class="comment">//增加映射路径</span></span><br><span class="line">        <span class="type">UrlBasedCorsConfigurationSource</span> <span class="variable">source</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UrlBasedCorsConfigurationSource</span>();</span><br><span class="line">        <span class="comment">// /**表示所有请求都支持跨域</span></span><br><span class="line">        source.registerCorsConfiguration(<span class="string">&quot;/**&quot;</span>, corsConfiguration);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//返回新的CorsFilter</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CorsFilter</span>(source);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="方法二：添加cors配置类"><a href="#方法二：添加cors配置类" class="headerlink" title="方法二：添加cors配置类"></a>方法二：添加cors配置类</h2><p><strong>WebMvcConfig</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.CorsRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * WebMvcConfig：配置类继承WebMvcConfigurationSupport</span></span><br><span class="line"><span class="comment"> * 重写addCorsMappings 配置实现跨域</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebMvcConfig</span> <span class="keyword">extends</span> <span class="title class_">WebMvcConfigurationSupport</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> &#123;</span><br><span class="line">        registry.addMapping(<span class="string">&quot;/**&quot;</span>)</span><br><span class="line">                .allowedOrigins(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .allowedMethods(<span class="string">&quot;POST&quot;</span>,<span class="string">&quot;GET&quot;</span>,<span class="string">&quot;PUT&quot;</span>,<span class="string">&quot;OPTIONS&quot;</span>,<span class="string">&quot;DELETE&quot;</span>)</span><br><span class="line">                .maxAge(<span class="number">3600</span>)</span><br><span class="line">                .allowCredentials(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>具体来说，它允许所有来源（allowedOrigins(&quot;*&quot;)）的POST、GET、PUT、OPTIONS和DELETE方法（allowedMethods(&quot;POST&quot;,&quot;GET&quot;,&quot;PUT&quot;,&quot;OPTIONS&quot;,&quot;DELETE&quot;)），并允许凭据（allowCredentials(true)）的访问，设置了最大缓存时间为3600秒（maxAge(3600)）。</code></p><h2 id="方法三：使用Filter方法实现跨域"><a href="#方法三：使用Filter方法实现跨域" class="headerlink" title="方法三：使用Filter方法实现跨域"></a>方法三：使用Filter方法实现跨域</h2><ol><li><p>Filter类配置跨域拦截</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebFilter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.xml.crypto.dsig.spec.XPathType;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">//对映射路径配置，所有</span></span><br><span class="line"><span class="meta">@WebFilter(urlPatterns = &quot;*&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CorsFilter</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line">        Filter.<span class="built_in">super</span>.init(filterConfig);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        <span class="type">HttpServletResponse</span> <span class="variable">response</span> <span class="operator">=</span> (HttpServletResponse) servletResponse;</span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">request</span> <span class="operator">=</span> (HttpServletRequest) servletRequest;</span><br><span class="line">        response.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        response.setContentType(<span class="string">&quot;application/json;charset=UTF-8&quot;</span>);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>,<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Access-Control-Allow-Credentials&quot;</span>,<span class="string">&quot;true&quot;</span>);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Access-Control-Allow-Methods&quot;</span>,<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Access-Control-Allow-Headers&quot;</span>,<span class="string">&quot;Content-Type,Authorization&quot;</span>);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Access-Control-Expose-Headers&quot;</span>,<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        filterChain.doFilter(request,response);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line">        Filter.<span class="built_in">super</span>.destroy();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>在启动类添加@ServletComponentScan注解,用来扫描Filter过滤器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.servlet.ServletComponentScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ServletComponentScan</span> 是 Spring 框架中的一个注解，</span></span><br><span class="line"><span class="comment"> * 它可以自动扫描 <span class="doctag">@WebServlet</span>、<span class="doctag">@WebFilter</span> 和 <span class="doctag">@WebListener</span> 注解，</span></span><br><span class="line"><span class="comment"> * 并将它们注册为 Servlet、Filter 和 Listener。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ServletComponentScan</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommodityApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(CommodityApplication.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 后端配置跨域 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot 整合Druid</title>
      <link href="/2023/03/28/Spring%20Boot%E2%80%94%E6%95%B4%E5%90%88Druid/"/>
      <url>/2023/03/28/Spring%20Boot%E2%80%94%E6%95%B4%E5%90%88Druid/</url>
      
        <content type="html"><![CDATA[<h2 id="配置pom-xml"><a href="#配置pom-xml" class="headerlink" title="配置pom.xml"></a>配置pom.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">        <span class="comment">&lt;!-- 这里mysql配置5版本就可以 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.14<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="配置application-yml"><a href="#配置application-yml" class="headerlink" title="配置application.yml"></a>配置application.yml</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">datasource:</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/xxx?useSSl=true&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">  <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br></pre></td></tr></table></figure><h2 id="测试数据数据库连接池是否生效"><a href="#测试数据数据库连接池是否生效" class="headerlink" title="测试数据数据库连接池是否生效"></a>测试数据数据库连接池是否生效</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeansException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.annotation.EnableCaching;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContextAware;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.mapper&quot;)</span></span><br><span class="line"><span class="meta">@EnableCaching</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SsmApplication</span> <span class="keyword">implements</span> <span class="title class_">ApplicationContextAware</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(SsmApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setApplicationContext</span><span class="params">(ApplicationContext applicationContext)</span> <span class="keyword">throws</span> BeansException &#123;</span><br><span class="line">        System.out.println(applicationContext.getBean(DataSource.class).getClass().getSimpleName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>结果: DruidDataSource</p></div><h2 id="配置额外参数-可选"><a href="#配置额外参数-可选" class="headerlink" title="配置额外参数(可选)"></a>配置额外参数(可选)</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">datasource:</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/book?useSSl=true&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">  <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#Spring Boot 默认是不注入这些属性值的，需要自己绑定</span></span><br><span class="line">  <span class="comment">#druid 数据源专有配置</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#配置监控统计拦截的filters，stat:监控统计、log4j：日志记录、wall：防御sql注入</span></span><br><span class="line">  <span class="attr">filters:</span> <span class="string">wall,stat,log4j</span></span><br><span class="line">  <span class="comment">#2.连接池配置</span></span><br><span class="line">  <span class="comment">#初始化连接池的连接数量 大小，最小，最大</span></span><br><span class="line">  <span class="attr">initial-size:</span> <span class="number">5</span></span><br><span class="line">  <span class="attr">min-idle:</span> <span class="number">5</span></span><br><span class="line">  <span class="attr">max-active:</span> <span class="number">20</span></span><br><span class="line">  <span class="comment">#配置获取连接等待超时的时间</span></span><br><span class="line">  <span class="attr">max-wait:</span> <span class="number">60000</span></span><br><span class="line">  <span class="comment">#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒</span></span><br><span class="line">  <span class="attr">time-between-eviction-runs-millis:</span> <span class="number">60000</span></span><br><span class="line">  <span class="comment"># 配置一个连接在池中最小生存的时间，单位是毫秒</span></span><br><span class="line">  <span class="attr">min-evictable-idle-time-millis:</span> <span class="number">30000</span></span><br><span class="line">  <span class="attr">validation-query:</span> <span class="string">SELECT</span> <span class="number">1</span> <span class="string">FROM</span> <span class="string">DUAL</span></span><br><span class="line">  <span class="attr">test-while-idle:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">test-on-borrow:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">test-on-return:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 是否缓存preparedStatement，也就是PSCache  官方建议MySQL下建议关闭   个人建议如果想用SQL防火墙 建议打开</span></span><br><span class="line">  <span class="attr">pool-prepared-statements:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">max-pool-prepared-statement-per-connection-size:</span> <span class="number">20</span></span><br></pre></td></tr></table></figure><h2 id="Druid参数说明"><a href="#Druid参数说明" class="headerlink" title="Druid参数说明"></a>Druid参数说明</h2><table style="width:650px;" cellspacing="1" cellpadding="1" border="1">    <caption>        DruidDataSource 参数    </caption>    <thead>    <tr>        <td>配置</td>        <th>缺省值</th>        <th>说明</th>    </tr>    </thead>    <tr>        <td>name</td>        <td></td>        <td>配置这个属性的意义在于，如果存在多个数据源，监控的时候可以通过名字来区分开来。&nbsp;<br>            如果没有配置，将会生成一个名字，格式是："DataSource-" + System.identityHashCode(this)        </td>    </tr>    <tbody>    <tr>        <td>jdbcUrl</td>        <td></td>        <td>连接数据库的url，不同数据库不一样。例如：&nbsp;<br> mysql : jdbc:mysql://10.20.153.104:3306/druid2&nbsp;<br>            oracle : jdbc:oracle:thin:@10.20.149.85:1521:ocnauto        </td>    </tr>    <tr>        <td>username</td>        <td></td>        <td>连接数据库的用户名</td>    </tr>    <tr>        <td>password</td>        <td></td>        <td>连接数据库的密码。如果你不希望密码直接写在配置文件中，可以使用ConfigFilter</td>    </tr>    <tr>        <td>driverClassName</td>        <td>根据url自动识别</td>        <td>这一项可配可不配，如果不配置druid会根据url自动识别dbType，然后选择相应的driverClassName(建议配置下)</td>    </tr>    <tr>        <td>initialSize</td>        <td>0</td>        <td>初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时</td>    </tr>    <tr>        <td>maxActive</td>        <td>8</td>        <td>最大连接池数量</td>    </tr>    <tr>        <td>maxIdle</td>        <td>8</td>        <td>已经不再使用，配置了也没效果</td>    </tr>    <tr>        <td>minIdle</td>        <td></td>        <td>最小连接池数量</td>    </tr>    <tr>        <td>maxWait</td>        <td></td>        <td>            获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。        </td>    </tr>    <tr>        <td>poolPreparedStatements</td>        <td>false</td>        <td>            是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。        </td>    </tr>    <tr>        <td>maxOpenPreparedStatements</td>        <td>-1</td>        <td>            要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100        </td>    </tr>    <tr>        <td>validationQuery</td>        <td></td>        <td>            用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。        </td>    </tr>    <tr>        <td>testOnBorrow</td>        <td>true</td>        <td>申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。</td>    </tr>    <tr>        <td>testOnReturn</td>        <td>false</td>        <td>归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能</td>    </tr>    <tr>        <td>testWhileIdle</td>        <td>false</td>        <td>            建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。        </td>    </tr>    <tr>        <td>timeBetweenEvictionRunsMillis</td>        <td></td>        <td><p>有两个含义：&nbsp;<br> 1) Destroy线程会检测连接的间隔时间</p>            <p>2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明</p></td>    </tr>    <tr>        <td>numTestsPerEvictionRun</td>        <td></td>        <td>不再使用，一个DruidDataSource只支持一个EvictionRun</td>    </tr>    <tr>        <td>minEvictableIdleTimeMillis</td>        <td></td>        <td></td>    </tr>    <tr>        <td>connectionInitSqls</td>        <td></td>        <td>物理连接初始化的时候执行的sql</td>    </tr>    <tr>        <td>exceptionSorter</td>        <td>根据dbType自动识别</td>        <td>当数据库抛出一些不可恢复的异常时，抛弃连接</td>    </tr>    <tr>        <td>filters</td>        <td></td>        <td>属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：&nbsp;<br>            监控统计用的filter:stat日志用的filter:log4j防御sql注入的filter:wall        </td>    </tr>    <tr>        <td>proxyFilters</td>        <td></td>        <td>            类型是List&lt;com.alibaba.druid.filter.Filter&gt;，如果同时配置了filters和proxyFilters，是组合关系，并非替换关系        </td>    </tr>    </tbody></table>]]></content>
      
      
      <categories>
          
          <category> Spring-Boot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring Boot整合Druid </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis实现Redis二级缓存</title>
      <link href="/2023/03/28/Mybatis%E5%AE%9E%E7%8E%B0Redis%E4%BA%8C%E7%BA%A7%E7%BC%93%E5%AD%98/"/>
      <url>/2023/03/28/Mybatis%E5%AE%9E%E7%8E%B0Redis%E4%BA%8C%E7%BA%A7%E7%BC%93%E5%AD%98/</url>
      
        <content type="html"><![CDATA[<h1 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h1><h2 id="缓存更新策略"><a href="#缓存更新策略" class="headerlink" title="缓存更新策略"></a>缓存更新策略</h2><ul><li>利用Redis的缓存淘汰策略被动更新 LRU 、LFU</li><li>利用TTL被动更新</li><li>在更新数据库时主动更新 （先更数据库再删缓存—-延时双删）</li><li>异步更新 定时任务 数据不保证时时一致 不穿DB</li></ul><h2 id="不同策略之间的优缺点"><a href="#不同策略之间的优缺点" class="headerlink" title="不同策略之间的优缺点"></a>不同策略之间的优缺点</h2><table><thead><tr><th>策略</th><th>一致性</th><th>维护成本</th></tr></thead><tbody><tr><td>利用Redis的缓存淘汰策略被动更新</td><td>最差</td><td>最低</td></tr><tr><td>利用TTL被动更新</td><td>较差</td><td>较低</td></tr><tr><td>在更新数据库时主动更新</td><td>较强</td><td>最高</td></tr></tbody></table><h2 id="Redis与Mybatis整合"><a href="#Redis与Mybatis整合" class="headerlink" title="Redis与Mybatis整合"></a>Redis与Mybatis整合</h2><ul><li>可以使用Redis做Mybatis的二级缓存，在分布式环境下可以使用。</li><li>框架采用springboot+Mybatis+Redis。框架的搭建就不赘述了。</li></ul><h2 id="常用注解"><a href="#常用注解" class="headerlink" title="常用注解"></a>常用注解</h2><ul><li>@Cacheable ： 触发将数据保存到缓存的操作；</li><li>@CacheEvict : 触发将数据从缓存删除的操作；</li><li>@CachePut ： 不影响方法执行更新缓存；</li><li>@Cacheing： 组合以上多个操作；</li><li>@CacheConfig： 在类级别共享缓存的相同配置；</li></ul><h2 id="缓存Key指定"><a href="#缓存Key指定" class="headerlink" title="缓存Key指定"></a>缓存Key指定</h2><table><thead><tr><th>属性名称</th><th>描述</th><th>示例</th></tr></thead><tbody><tr><td>methodName</td><td>当前方法名</td><td>#root.methodName</td></tr><tr><td>method</td><td>当前方法</td><td>#root.method.name</td></tr><tr><td>target</td><td>当前被调用的对象</td><td>#root.target</td></tr><tr><td>targetClass</td><td>当前被调用的对象的class</td><td>#root.targetClass</td></tr><tr><td>args</td><td>当前方法参数组成的数组</td><td>#root.args[0]</td></tr><tr><td>caches</td><td>当前被调用的方法使用的Cache</td><td>#root.caches[0].name</td></tr></tbody></table><h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><h2 id="在pom-xml中添加对应的依赖"><a href="#在pom-xml中添加对应的依赖" class="headerlink" title="在pom.xml中添加对应的依赖"></a>在pom.xml中添加对应的依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--缓存--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-cache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--redis--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="在application-yml中添加配置"><a href="#在application-yml中添加配置" class="headerlink" title="在application.yml中添加配置"></a>在application.yml中添加配置</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:mapper/*.xml</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">cache-enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.124</span></span><br><span class="line">    <span class="attr">database:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/book?useSSl=true&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">  <span class="attr">cache:</span></span><br><span class="line">    <span class="attr">redis:</span></span><br><span class="line">      <span class="comment"># 缓存过期时间(1800秒)</span></span><br><span class="line">      <span class="attr">time-to-live:</span> <span class="number">1800000</span></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">mapper:</span> <span class="string">debug</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="启动类加入缓存注解"><a href="#启动类加入缓存注解" class="headerlink" title="启动类加入缓存注解"></a>启动类加入缓存注解</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeansException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.annotation.EnableCaching;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContextAware;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.mapper&quot;)</span></span><br><span class="line"><span class="comment">//缓存注解</span></span><br><span class="line"><span class="meta">@EnableCaching</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SsmApplication</span> <span class="keyword">implements</span> <span class="title class_">ApplicationContextAware</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(SsmApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setApplicationContext</span><span class="params">(ApplicationContext applicationContext)</span> <span class="keyword">throws</span> BeansException &#123;</span><br><span class="line">        System.out.println(applicationContext.getBean(DataSource.class).getClass().getSimpleName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在对应操作数据库的方法上实现二级缓存"><a href="#在对应操作数据库的方法上实现二级缓存" class="headerlink" title="在对应操作数据库的方法上实现二级缓存"></a>在对应操作数据库的方法上实现二级缓存</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.pojo.Bookweb;</span><br><span class="line"><span class="keyword">import</span> com.service.BookwebService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.annotation.Cacheable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookWebController</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> BookwebService bookwebService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/list&quot;)</span></span><br><span class="line">    <span class="comment">//把查询的所有数据都加入到redis的二级缓存</span></span><br><span class="line">    <span class="meta">@Cacheable(value = &quot;BookCache&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Bookweb&gt; <span class="title function_">list</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> bookwebService.list();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/add&quot;)</span></span><br><span class="line">    <span class="comment">//当增加一条数据,就清楚redis里的所有BookCache二级缓存数据</span></span><br><span class="line">    <span class="meta">@CacheEvict(value = &quot;BookCache&quot;, allEntries = true)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(<span class="meta">@RequestBody</span> Bookweb bookweb)</span> &#123;</span><br><span class="line">        bookwebService.save(bookweb);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MyBatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mybatis实现Redis二级缓存 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>发表文章基本属性配置</title>
      <link href="/2023/03/28/%E5%8F%91%E8%A1%A8%E6%96%87%E7%AB%A0%E5%9F%BA%E6%9C%AC%E5%B1%9E%E6%80%A7%E9%85%8D%E7%BD%AE/"/>
      <url>/2023/03/28/%E5%8F%91%E8%A1%A8%E6%96%87%E7%AB%A0%E5%9F%BA%E6%9C%AC%E5%B1%9E%E6%80%A7%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">type:</span><br><span class="line">comments:</span><br><span class="line">description:</span><br><span class="line">keywords:</span><br><span class="line">top<span class="emphasis">_img:</span></span><br><span class="line"><span class="emphasis">mathjax:</span></span><br><span class="line"><span class="emphasis">katex:</span></span><br><span class="line"><span class="emphasis">aside:</span></span><br><span class="line"><span class="emphasis">aplayer:</span></span><br><span class="line"><span class="emphasis">highlight_</span>shrink:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><table><thead><tr><th>写法</th><th>解释</th></tr></thead><tbody><tr><td>title</td><td>【必需】页面标题</td></tr><tr><td>date</td><td>【必需】页面创建日期</td></tr><tr><td>type</td><td>【必需】标签、分类和友情链接三个页面需要配置</td></tr><tr><td>updated</td><td>【可选】页面更新日期</td></tr><tr><td>description</td><td>【可选】页面描述</td></tr><tr><td>keywords</td><td>【可选】页面关键字</td></tr><tr><td>comments</td><td>【可选】显示页面评论模块(默认 true)</td></tr><tr><td>top_img</td><td>【可选】页面顶部图片</td></tr><tr><td>mathjax</td><td>【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)</td></tr><tr><td>katex</td><td>可选】显示katex(当设置katex的per_page: false时，才需要配置，默认 false)</td></tr><tr><td>mathjax</td><td>【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)</td></tr><tr><td>aside</td><td>【可选】显示侧边栏 (默认 true)</td></tr><tr><td>aplayer</td><td>【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置</td></tr><tr><td>highlight_shrink</td><td>【可选】配置代码框是否展开(true&#x2F;false)(默认为设置中highlight_shrink的配置)</td></tr></tbody></table><p>Page Front-matter</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">keywords:</span><br><span class="line">description:</span><br><span class="line">top<span class="emphasis">_img:</span></span><br><span class="line"><span class="emphasis">comments:</span></span><br><span class="line"><span class="emphasis">cover:</span></span><br><span class="line"><span class="emphasis">toc:</span></span><br><span class="line"><span class="emphasis">toc_</span>number:</span><br><span class="line">toc<span class="emphasis">_style_</span>simple:</span><br><span class="line">copyright:</span><br><span class="line">copyright<span class="emphasis">_author:</span></span><br><span class="line"><span class="emphasis">copyright_</span>author<span class="emphasis">_href:</span></span><br><span class="line"><span class="emphasis">copyright_</span>url:</span><br><span class="line">copyright<span class="emphasis">_info:</span></span><br><span class="line"><span class="emphasis">mathjax:</span></span><br><span class="line"><span class="emphasis">katex:</span></span><br><span class="line"><span class="emphasis">aplayer:</span></span><br><span class="line"><span class="emphasis">highlight_</span>shrink:</span><br><span class="line"><span class="section">aside:</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>写法</th><th>解释</th></tr></thead><tbody><tr><td>title</td><td>【必需】文章标题</td></tr><tr><td>date</td><td>【必需】文章创建日期</td></tr><tr><td>updated</td><td>【可选】文章更新日期</td></tr><tr><td>tags</td><td>【可选】文章标签</td></tr><tr><td>categories</td><td>【可选】文章分类</td></tr><tr><td>keywords</td><td>【可选】文章关键字</td></tr><tr><td>description</td><td>【可选】文章描述</td></tr><tr><td>top_img</td><td>【可选】文章顶部图片</td></tr><tr><td>cover</td><td>【可选】文章缩略图(如果没有设置top_img,文章页顶部将显示缩略图，可设为false&#x2F;图片地址&#x2F;留空)</td></tr><tr><td>comments</td><td>【可选】显示文章评论模块(默认 true)</td></tr><tr><td>toc</td><td>【可选】显示文章TOC(默认为设置中toc的enable配置)</td></tr><tr><td>toc_number</td><td>【可选】显示toc_number(默认为设置中toc的number配置)</td></tr><tr><td>toc_style_simple</td><td>【可选】显示 toc 简洁模式</td></tr><tr><td>copyright</td><td>【可选】显示文章版权模块(默认为设置中post_copyright的enable配置)</td></tr><tr><td>copyright_author</td><td>【可选】文章版权模块的文章作者</td></tr><tr><td>copyright_author_href</td><td>【可选】文章版权模块的文章作者链接</td></tr><tr><td>copyright_url</td><td>【可选】文章版权模块的文章连结链接</td></tr><tr><td>copyright_info</td><td>【可选】文章版权模块的版权声明文字</td></tr><tr><td>mathjax</td><td>【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)</td></tr><tr><td>katex</td><td>【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认 false)</td></tr><tr><td>aplayer</td><td>【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置</td></tr><tr><td>highlight_shrink</td><td>【可选】配置代码框是否展开(true&#x2F;false)(默认为设置中highlight_shrink的配置)</td></tr><tr><td>aside</td><td>【可选】显示侧边栏 (默认 true)</td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> 发表文章基本属性配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/03/26/hello-world/"/>
      <url>/2023/03/26/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
